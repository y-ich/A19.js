{
  "converted_at": 1526030229,
  "inputs": [
    "Variable0"
  ],
  "outputs": [
    "Variable419",
    "Variable406"
  ],
  "memory_layout": {
    "static": {
      "size": -1,
      "allocations": {
        "ConstantVariable583": {
          "name": "ConstantVariable583",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable647": {
          "name": "ConstantVariable647",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable924": {
          "name": "ConstantVariable924",
          "offset": -1,
          "size": 128,
          "width": 32,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "ConstantVariable922": {
          "name": "ConstantVariable922",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable340": {
          "name": "ConstantVariable340",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable573": {
          "name": "ConstantVariable573",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1518": {
          "name": "Variable1518",
          "offset": -1,
          "size": 93312,
          "width": 288,
          "height": 81,
          "channel_mode": "RGBA"
        },
        "Variable10": {
          "name": "Variable10",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable898": {
          "name": "ConstantVariable898",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1025": {
          "name": "Variable1025",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable337": {
          "name": "ConstantVariable337",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable225": {
          "name": "ConstantVariable225",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1678": {
          "name": "Variable1678",
          "offset": -1,
          "size": 81,
          "width": 81,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable625": {
          "name": "ConstantVariable625",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable907": {
          "name": "ConstantVariable907",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable67": {
          "name": "Variable67",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable334": {
          "name": "ConstantVariable334",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable577": {
          "name": "ConstantVariable577",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable142": {
          "name": "ConstantVariable142",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable17": {
          "name": "ConstantVariable17",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable917": {
          "name": "ConstantVariable917",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable883": {
          "name": "ConstantVariable883",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable615": {
          "name": "ConstantVariable615",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable882": {
          "name": "ConstantVariable882",
          "offset": -1,
          "size": 13284,
          "width": 162,
          "height": 82,
          "channel_mode": "R"
        },
        "ConstantVariable222": {
          "name": "ConstantVariable222",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable206": {
          "name": "ConstantVariable206",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable653": {
          "name": "ConstantVariable653",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable605": {
          "name": "ConstantVariable605",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable581": {
          "name": "ConstantVariable581",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable145": {
          "name": "ConstantVariable145",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable619": {
          "name": "ConstantVariable619",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable899": {
          "name": "ConstantVariable899",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable390": {
          "name": "Variable390",
          "offset": -1,
          "size": 10368,
          "width": 32,
          "height": 81,
          "channel_mode": "RGBA"
        },
        "ConstantVariable607": {
          "name": "ConstantVariable607",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable885": {
          "name": "ConstantVariable885",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable908": {
          "name": "ConstantVariable908",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable209": {
          "name": "ConstantVariable209",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable909": {
          "name": "ConstantVariable909",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable621": {
          "name": "ConstantVariable621",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable579": {
          "name": "ConstantVariable579",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable900": {
          "name": "ConstantVariable900",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable419": {
          "name": "Variable419",
          "offset": -1,
          "size": 82,
          "width": 82,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable603": {
          "name": "ConstantVariable603",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable623": {
          "name": "ConstantVariable623",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable30": {
          "name": "ConstantVariable30",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable884": {
          "name": "ConstantVariable884",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable0": {
          "name": "Variable0",
          "offset": -1,
          "size": 1458,
          "width": 1458,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable601": {
          "name": "ConstantVariable601",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable887": {
          "name": "ConstantVariable887",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable651": {
          "name": "ConstantVariable651",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable921": {
          "name": "ConstantVariable921",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable129": {
          "name": "ConstantVariable129",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable655": {
          "name": "ConstantVariable655",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable321": {
          "name": "ConstantVariable321",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable617": {
          "name": "ConstantVariable617",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable649": {
          "name": "ConstantVariable649",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable342": {
          "name": "ConstantVariable342",
          "offset": -1,
          "size": 82,
          "width": 82,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable406": {
          "name": "Variable406",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable886": {
          "name": "ConstantVariable886",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable126": {
          "name": "ConstantVariable126",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable318": {
          "name": "ConstantVariable318",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable29": {
          "name": "Variable29",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable900": {
          "name": "Variable900",
          "offset": -1,
          "size": 81,
          "width": 81,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable910": {
          "name": "ConstantVariable910",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable599": {
          "name": "ConstantVariable599",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable572": {
          "name": "ConstantVariable572",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable113": {
          "name": "ConstantVariable113",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable161": {
          "name": "ConstantVariable161",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable923": {
          "name": "ConstantVariable923",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable193": {
          "name": "ConstantVariable193",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable46": {
          "name": "ConstantVariable46",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable912": {
          "name": "ConstantVariable912",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable902": {
          "name": "ConstantVariable902",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable190": {
          "name": "ConstantVariable190",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable901": {
          "name": "ConstantVariable901",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable657": {
          "name": "ConstantVariable657",
          "offset": -1,
          "size": 2,
          "width": 2,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable906": {
          "name": "ConstantVariable906",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable49": {
          "name": "ConstantVariable49",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable110": {
          "name": "ConstantVariable110",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable177": {
          "name": "ConstantVariable177",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable918": {
          "name": "ConstantVariable918",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable903": {
          "name": "ConstantVariable903",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable352": {
          "name": "ConstantVariable352",
          "offset": -1,
          "size": 2,
          "width": 2,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable33": {
          "name": "ConstantVariable33",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable879": {
          "name": "ConstantVariable879",
          "offset": -1,
          "size": 5184,
          "width": 81,
          "height": 64,
          "channel_mode": "R"
        },
        "Variable1526": {
          "name": "Variable1526",
          "offset": -1,
          "size": 93312,
          "width": 288,
          "height": 81,
          "channel_mode": "RGBA"
        },
        "ConstantVariable575": {
          "name": "ConstantVariable575",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable609": {
          "name": "ConstantVariable609",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1023": {
          "name": "Variable1023",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable589": {
          "name": "ConstantVariable589",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable905": {
          "name": "ConstantVariable905",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable2": {
          "name": "ConstantVariable2",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1515": {
          "name": "Variable1515",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable65": {
          "name": "ConstantVariable65",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable158": {
          "name": "ConstantVariable158",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1514": {
          "name": "Variable1514",
          "offset": -1,
          "size": 13122,
          "width": 162,
          "height": 81,
          "channel_mode": "R"
        },
        "ConstantVariable78": {
          "name": "ConstantVariable78",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable595": {
          "name": "ConstantVariable595",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable925": {
          "name": "ConstantVariable925",
          "offset": -1,
          "size": 256,
          "width": 32,
          "height": 2,
          "channel_mode": "RGBA"
        },
        "Variable1": {
          "name": "Variable1",
          "offset": -1,
          "size": 1458,
          "width": 1458,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable916": {
          "name": "ConstantVariable916",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable613": {
          "name": "ConstantVariable613",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable587": {
          "name": "ConstantVariable587",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable597": {
          "name": "ConstantVariable597",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable904": {
          "name": "ConstantVariable904",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable920": {
          "name": "ConstantVariable920",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable174": {
          "name": "ConstantVariable174",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable611": {
          "name": "ConstantVariable611",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable62": {
          "name": "ConstantVariable62",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable911": {
          "name": "ConstantVariable911",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable585": {
          "name": "ConstantVariable585",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable913": {
          "name": "ConstantVariable913",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1542": {
          "name": "Variable1542",
          "offset": -1,
          "size": 93312,
          "width": 288,
          "height": 81,
          "channel_mode": "RGBA"
        },
        "ConstantVariable896": {
          "name": "ConstantVariable896",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable897": {
          "name": "Variable897",
          "offset": -1,
          "size": 162,
          "width": 162,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1574": {
          "name": "Variable1574",
          "offset": -1,
          "size": 93312,
          "width": 288,
          "height": 81,
          "channel_mode": "RGBA"
        },
        "ConstantVariable98": {
          "name": "ConstantVariable98",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable889": {
          "name": "ConstantVariable889",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable880": {
          "name": "ConstantVariable880",
          "offset": -1,
          "size": 64,
          "width": 16,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "ConstantVariable633": {
          "name": "ConstantVariable633",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1638": {
          "name": "Variable1638",
          "offset": -1,
          "size": 93312,
          "width": 288,
          "height": 81,
          "channel_mode": "RGBA"
        },
        "ConstantVariable270": {
          "name": "ConstantVariable270",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable405": {
          "name": "Variable405",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable404": {
          "name": "Variable404",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable403": {
          "name": "Variable403",
          "offset": -1,
          "size": 64,
          "width": 16,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "ConstantVariable81": {
          "name": "ConstantVariable81",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable637": {
          "name": "ConstantVariable637",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1681": {
          "name": "Variable1681",
          "offset": -1,
          "size": 162,
          "width": 162,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable593": {
          "name": "ConstantVariable593",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable273": {
          "name": "ConstantVariable273",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable295": {
          "name": "Variable295",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable914": {
          "name": "ConstantVariable914",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable418": {
          "name": "Variable418",
          "offset": -1,
          "size": 82,
          "width": 82,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable643": {
          "name": "ConstantVariable643",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable635": {
          "name": "ConstantVariable635",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable289": {
          "name": "ConstantVariable289",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable919": {
          "name": "ConstantVariable919",
          "offset": -1,
          "size": 20736,
          "width": 162,
          "height": 128,
          "channel_mode": "R"
        },
        "ConstantVariable893": {
          "name": "ConstantVariable893",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable888": {
          "name": "ConstantVariable888",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable891": {
          "name": "ConstantVariable891",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable915": {
          "name": "ConstantVariable915",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable143": {
          "name": "Variable143",
          "offset": -1,
          "size": 10368,
          "width": 10368,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable241": {
          "name": "ConstantVariable241",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable641": {
          "name": "ConstantVariable641",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable890": {
          "name": "ConstantVariable890",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable286": {
          "name": "ConstantVariable286",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable302": {
          "name": "ConstantVariable302",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable639": {
          "name": "ConstantVariable639",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable897": {
          "name": "ConstantVariable897",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable94": {
          "name": "ConstantVariable94",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable591": {
          "name": "ConstantVariable591",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable629": {
          "name": "ConstantVariable629",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable254": {
          "name": "ConstantVariable254",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable305": {
          "name": "ConstantVariable305",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable631": {
          "name": "ConstantVariable631",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable895": {
          "name": "ConstantVariable895",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable627": {
          "name": "ConstantVariable627",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable257": {
          "name": "ConstantVariable257",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable645": {
          "name": "ConstantVariable645",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable899": {
          "name": "Variable899",
          "offset": -1,
          "size": 162,
          "width": 162,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable902": {
          "name": "Variable902",
          "offset": -1,
          "size": 81,
          "width": 81,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable892": {
          "name": "ConstantVariable892",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable894": {
          "name": "ConstantVariable894",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1728": {
          "name": "Variable1728",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable238": {
          "name": "ConstantVariable238",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable402": {
          "name": "Variable402",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable401": {
          "name": "Variable401",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        }
      }
    },
    "dynamic": {
      "size": -1,
      "allocations": {}
    },
    "mapping": {
      "Variable0": "Variable0",
      "Variable1": "Variable1",
      "Variable1514": "Variable1514",
      "Variable1515": "Variable1515",
      "Variable1023": "Variable1023",
      "Variable1025": "Variable1025",
      "Variable10": "Variable10",
      "Variable1518": "Variable1518",
      "Variable1519": "Variable1515",
      "Variable1020": "Variable1023",
      "Variable1022": "Variable1025",
      "Variable19": "Variable1515",
      "Variable1522": "Variable1518",
      "Variable1523": "Variable1023",
      "Variable1017": "Variable1515",
      "Variable1026": "Variable1025",
      "Variable28": "Variable1023",
      "Variable29": "Variable29",
      "Variable1526": "Variable1526",
      "Variable1527": "Variable1515",
      "Variable1014": "Variable10",
      "Variable1016": "Variable1023",
      "Variable38": "Variable1515",
      "Variable1530": "Variable1518",
      "Variable1531": "Variable1025",
      "Variable1011": "Variable1515",
      "Variable1027": "Variable1023",
      "Variable47": "Variable1025",
      "Variable48": "Variable29",
      "Variable1534": "Variable1526",
      "Variable1535": "Variable1515",
      "Variable1008": "Variable1023",
      "Variable1010": "Variable10",
      "Variable57": "Variable1515",
      "Variable1538": "Variable1518",
      "Variable1539": "Variable1023",
      "Variable1005": "Variable1515",
      "Variable1028": "Variable1025",
      "Variable66": "Variable1023",
      "Variable67": "Variable67",
      "Variable1542": "Variable1542",
      "Variable1543": "Variable1515",
      "Variable1002": "Variable10",
      "Variable1004": "Variable1023",
      "Variable76": "Variable1515",
      "Variable1546": "Variable1518",
      "Variable1547": "Variable1025",
      "Variable999": "Variable1515",
      "Variable1029": "Variable1023",
      "Variable85": "Variable1025",
      "Variable86": "Variable29",
      "Variable1550": "Variable1526",
      "Variable1551": "Variable1515",
      "Variable996": "Variable1023",
      "Variable998": "Variable10",
      "Variable95": "Variable1515",
      "Variable1554": "Variable1518",
      "Variable1555": "Variable1023",
      "Variable993": "Variable1515",
      "Variable1030": "Variable1025",
      "Variable104": "Variable1023",
      "Variable105": "Variable67",
      "Variable1558": "Variable1542",
      "Variable1559": "Variable1515",
      "Variable990": "Variable10",
      "Variable992": "Variable1023",
      "Variable114": "Variable1515",
      "Variable1562": "Variable1518",
      "Variable1563": "Variable1025",
      "Variable987": "Variable1515",
      "Variable1031": "Variable1023",
      "Variable123": "Variable1025",
      "Variable124": "Variable29",
      "Variable1566": "Variable1526",
      "Variable1567": "Variable1515",
      "Variable984": "Variable1023",
      "Variable986": "Variable10",
      "Variable133": "Variable1515",
      "Variable1570": "Variable1518",
      "Variable1571": "Variable1023",
      "Variable981": "Variable1515",
      "Variable1032": "Variable1025",
      "Variable142": "Variable1023",
      "Variable143": "Variable143",
      "Variable1574": "Variable1574",
      "Variable1575": "Variable1515",
      "Variable978": "Variable10",
      "Variable980": "Variable1023",
      "Variable152": "Variable1515",
      "Variable1578": "Variable1518",
      "Variable1579": "Variable1025",
      "Variable975": "Variable1515",
      "Variable1033": "Variable1023",
      "Variable161": "Variable1025",
      "Variable162": "Variable29",
      "Variable1582": "Variable1526",
      "Variable1583": "Variable1515",
      "Variable972": "Variable1023",
      "Variable974": "Variable10",
      "Variable171": "Variable1515",
      "Variable1586": "Variable1518",
      "Variable1587": "Variable1023",
      "Variable969": "Variable1515",
      "Variable1034": "Variable1025",
      "Variable180": "Variable1023",
      "Variable181": "Variable67",
      "Variable1590": "Variable1542",
      "Variable1591": "Variable1515",
      "Variable966": "Variable10",
      "Variable968": "Variable1023",
      "Variable190": "Variable1515",
      "Variable1594": "Variable1518",
      "Variable1595": "Variable1025",
      "Variable963": "Variable1515",
      "Variable1035": "Variable1023",
      "Variable199": "Variable1025",
      "Variable200": "Variable29",
      "Variable1598": "Variable1526",
      "Variable1599": "Variable1515",
      "Variable960": "Variable1023",
      "Variable962": "Variable10",
      "Variable209": "Variable1515",
      "Variable1602": "Variable1518",
      "Variable1603": "Variable1023",
      "Variable957": "Variable1515",
      "Variable1036": "Variable1025",
      "Variable218": "Variable1023",
      "Variable219": "Variable143",
      "Variable1606": "Variable1574",
      "Variable1607": "Variable1515",
      "Variable954": "Variable10",
      "Variable956": "Variable1023",
      "Variable228": "Variable1515",
      "Variable1610": "Variable1518",
      "Variable1611": "Variable1025",
      "Variable951": "Variable1515",
      "Variable1037": "Variable1023",
      "Variable237": "Variable1025",
      "Variable238": "Variable29",
      "Variable1614": "Variable1526",
      "Variable1615": "Variable1515",
      "Variable948": "Variable1023",
      "Variable950": "Variable10",
      "Variable247": "Variable1515",
      "Variable1618": "Variable1518",
      "Variable1619": "Variable1023",
      "Variable945": "Variable1515",
      "Variable1038": "Variable1025",
      "Variable256": "Variable1023",
      "Variable257": "Variable67",
      "Variable1622": "Variable1542",
      "Variable1623": "Variable1515",
      "Variable942": "Variable10",
      "Variable944": "Variable1023",
      "Variable266": "Variable1515",
      "Variable1626": "Variable1518",
      "Variable1627": "Variable1025",
      "Variable939": "Variable1515",
      "Variable1039": "Variable1023",
      "Variable275": "Variable1025",
      "Variable276": "Variable29",
      "Variable1630": "Variable1526",
      "Variable1631": "Variable1515",
      "Variable936": "Variable1023",
      "Variable938": "Variable10",
      "Variable285": "Variable1515",
      "Variable1634": "Variable1518",
      "Variable1635": "Variable1023",
      "Variable933": "Variable1515",
      "Variable1040": "Variable1025",
      "Variable294": "Variable1023",
      "Variable295": "Variable295",
      "Variable1638": "Variable1638",
      "Variable1639": "Variable1515",
      "Variable930": "Variable10",
      "Variable932": "Variable1023",
      "Variable304": "Variable1515",
      "Variable1642": "Variable1518",
      "Variable1643": "Variable1025",
      "Variable927": "Variable1515",
      "Variable1041": "Variable1023",
      "Variable313": "Variable1025",
      "Variable314": "Variable29",
      "Variable1646": "Variable1526",
      "Variable1647": "Variable1515",
      "Variable924": "Variable1023",
      "Variable926": "Variable10",
      "Variable323": "Variable1515",
      "Variable1650": "Variable1518",
      "Variable1651": "Variable1023",
      "Variable921": "Variable1515",
      "Variable1042": "Variable1025",
      "Variable332": "Variable1023",
      "Variable333": "Variable67",
      "Variable1654": "Variable1542",
      "Variable1655": "Variable1515",
      "Variable918": "Variable10",
      "Variable920": "Variable1023",
      "Variable342": "Variable1515",
      "Variable1658": "Variable1518",
      "Variable1659": "Variable1025",
      "Variable915": "Variable1515",
      "Variable1043": "Variable1023",
      "Variable351": "Variable1025",
      "Variable352": "Variable29",
      "Variable1662": "Variable1526",
      "Variable1663": "Variable1515",
      "Variable912": "Variable1023",
      "Variable914": "Variable10",
      "Variable361": "Variable1515",
      "Variable1666": "Variable1518",
      "Variable1667": "Variable1023",
      "Variable909": "Variable1515",
      "Variable1044": "Variable1025",
      "Variable370": "Variable1023",
      "Variable371": "Variable143",
      "Variable1670": "Variable1574",
      "Variable1671": "Variable1515",
      "Variable906": "Variable10",
      "Variable908": "Variable1023",
      "Variable380": "Variable1515",
      "Variable1674": "Variable1518",
      "Variable1675": "Variable1025",
      "Variable903": "Variable1515",
      "Variable1045": "Variable1023",
      "Variable389": "Variable1025",
      "Variable1726": "Variable1515",
      "Variable390": "Variable390",
      "Variable1678": "Variable1678",
      "Variable900": "Variable900",
      "Variable902": "Variable902",
      "Variable399": "Variable1678",
      "Variable400": "Variable900",
      "Variable401": "Variable401",
      "Variable402": "Variable402",
      "Variable1728": "Variable1728",
      "Variable403": "Variable403",
      "Variable404": "Variable404",
      "Variable405": "Variable405",
      "Variable1681": "Variable1681",
      "Variable897": "Variable897",
      "Variable899": "Variable899",
      "Variable416": "Variable1681",
      "Variable417": "Variable897",
      "Variable418": "Variable418",
      "Variable419": "Variable419",
      "Variable406": "Variable406",
      "ConstantVariable919": "ConstantVariable919",
      "ConstantVariable17": "ConstantVariable17",
      "ConstantVariable573": "ConstantVariable573",
      "ConstantVariable918": "ConstantVariable918",
      "ConstantVariable30": "ConstantVariable30",
      "ConstantVariable575": "ConstantVariable575",
      "ConstantVariable917": "ConstantVariable917",
      "ConstantVariable33": "ConstantVariable33",
      "ConstantVariable577": "ConstantVariable577",
      "ConstantVariable920": "ConstantVariable920",
      "ConstantVariable46": "ConstantVariable46",
      "ConstantVariable579": "ConstantVariable579",
      "ConstantVariable921": "ConstantVariable921",
      "ConstantVariable49": "ConstantVariable49",
      "ConstantVariable581": "ConstantVariable581",
      "ConstantVariable922": "ConstantVariable922",
      "ConstantVariable62": "ConstantVariable62",
      "ConstantVariable583": "ConstantVariable583",
      "ConstantVariable923": "ConstantVariable923",
      "ConstantVariable65": "ConstantVariable65",
      "ConstantVariable585": "ConstantVariable585",
      "ConstantVariable916": "ConstantVariable916",
      "ConstantVariable78": "ConstantVariable78",
      "ConstantVariable587": "ConstantVariable587",
      "ConstantVariable915": "ConstantVariable915",
      "ConstantVariable81": "ConstantVariable81",
      "ConstantVariable589": "ConstantVariable589",
      "ConstantVariable914": "ConstantVariable914",
      "ConstantVariable94": "ConstantVariable94",
      "ConstantVariable591": "ConstantVariable591",
      "ConstantVariable913": "ConstantVariable913",
      "ConstantVariable98": "ConstantVariable98",
      "ConstantVariable593": "ConstantVariable593",
      "ConstantVariable912": "ConstantVariable912",
      "ConstantVariable110": "ConstantVariable110",
      "ConstantVariable595": "ConstantVariable595",
      "ConstantVariable911": "ConstantVariable911",
      "ConstantVariable113": "ConstantVariable113",
      "ConstantVariable597": "ConstantVariable597",
      "ConstantVariable910": "ConstantVariable910",
      "ConstantVariable126": "ConstantVariable126",
      "ConstantVariable599": "ConstantVariable599",
      "ConstantVariable909": "ConstantVariable909",
      "ConstantVariable129": "ConstantVariable129",
      "ConstantVariable601": "ConstantVariable601",
      "ConstantVariable908": "ConstantVariable908",
      "ConstantVariable142": "ConstantVariable142",
      "ConstantVariable603": "ConstantVariable603",
      "ConstantVariable907": "ConstantVariable907",
      "ConstantVariable145": "ConstantVariable145",
      "ConstantVariable605": "ConstantVariable605",
      "ConstantVariable906": "ConstantVariable906",
      "ConstantVariable158": "ConstantVariable158",
      "ConstantVariable607": "ConstantVariable607",
      "ConstantVariable905": "ConstantVariable905",
      "ConstantVariable161": "ConstantVariable161",
      "ConstantVariable609": "ConstantVariable609",
      "ConstantVariable904": "ConstantVariable904",
      "ConstantVariable174": "ConstantVariable174",
      "ConstantVariable611": "ConstantVariable611",
      "ConstantVariable903": "ConstantVariable903",
      "ConstantVariable177": "ConstantVariable177",
      "ConstantVariable613": "ConstantVariable613",
      "ConstantVariable902": "ConstantVariable902",
      "ConstantVariable190": "ConstantVariable190",
      "ConstantVariable615": "ConstantVariable615",
      "ConstantVariable901": "ConstantVariable901",
      "ConstantVariable193": "ConstantVariable193",
      "ConstantVariable617": "ConstantVariable617",
      "ConstantVariable900": "ConstantVariable900",
      "ConstantVariable206": "ConstantVariable206",
      "ConstantVariable619": "ConstantVariable619",
      "ConstantVariable899": "ConstantVariable899",
      "ConstantVariable209": "ConstantVariable209",
      "ConstantVariable621": "ConstantVariable621",
      "ConstantVariable898": "ConstantVariable898",
      "ConstantVariable222": "ConstantVariable222",
      "ConstantVariable623": "ConstantVariable623",
      "ConstantVariable897": "ConstantVariable897",
      "ConstantVariable225": "ConstantVariable225",
      "ConstantVariable625": "ConstantVariable625",
      "ConstantVariable896": "ConstantVariable896",
      "ConstantVariable238": "ConstantVariable238",
      "ConstantVariable627": "ConstantVariable627",
      "ConstantVariable895": "ConstantVariable895",
      "ConstantVariable241": "ConstantVariable241",
      "ConstantVariable629": "ConstantVariable629",
      "ConstantVariable894": "ConstantVariable894",
      "ConstantVariable254": "ConstantVariable254",
      "ConstantVariable631": "ConstantVariable631",
      "ConstantVariable893": "ConstantVariable893",
      "ConstantVariable257": "ConstantVariable257",
      "ConstantVariable633": "ConstantVariable633",
      "ConstantVariable892": "ConstantVariable892",
      "ConstantVariable270": "ConstantVariable270",
      "ConstantVariable635": "ConstantVariable635",
      "ConstantVariable891": "ConstantVariable891",
      "ConstantVariable273": "ConstantVariable273",
      "ConstantVariable637": "ConstantVariable637",
      "ConstantVariable890": "ConstantVariable890",
      "ConstantVariable286": "ConstantVariable286",
      "ConstantVariable639": "ConstantVariable639",
      "ConstantVariable889": "ConstantVariable889",
      "ConstantVariable289": "ConstantVariable289",
      "ConstantVariable641": "ConstantVariable641",
      "ConstantVariable888": "ConstantVariable888",
      "ConstantVariable302": "ConstantVariable302",
      "ConstantVariable643": "ConstantVariable643",
      "ConstantVariable887": "ConstantVariable887",
      "ConstantVariable305": "ConstantVariable305",
      "ConstantVariable645": "ConstantVariable645",
      "ConstantVariable886": "ConstantVariable886",
      "ConstantVariable318": "ConstantVariable318",
      "ConstantVariable647": "ConstantVariable647",
      "ConstantVariable885": "ConstantVariable885",
      "ConstantVariable321": "ConstantVariable321",
      "ConstantVariable649": "ConstantVariable649",
      "ConstantVariable884": "ConstantVariable884",
      "ConstantVariable334": "ConstantVariable334",
      "ConstantVariable651": "ConstantVariable651",
      "ConstantVariable883": "ConstantVariable883",
      "ConstantVariable337": "ConstantVariable337",
      "ConstantVariable653": "ConstantVariable653",
      "ConstantVariable924": "ConstantVariable924",
      "ConstantVariable340": "ConstantVariable340",
      "ConstantVariable655": "ConstantVariable655",
      "ConstantVariable879": "ConstantVariable879",
      "ConstantVariable2": "ConstantVariable2",
      "ConstantVariable880": "ConstantVariable880",
      "ConstantVariable572": "ConstantVariable572",
      "ConstantVariable925": "ConstantVariable925",
      "ConstantVariable352": "ConstantVariable352",
      "ConstantVariable657": "ConstantVariable657",
      "ConstantVariable882": "ConstantVariable882",
      "ConstantVariable342": "ConstantVariable342"
    }
  },
  "weight_encoding": "raw",
  "placeholders": [],
  "shader_sources": {
    "Reshape_956f0dc23e9a76a3bb8618857ef3bf4953db9352d7e8d6d5aed273d9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(1458,1);\nconst ivec4 v2 = ivec4(162,18,6,1);\nconst ivec4 v3 = ivec4(9,9,3,6);\nconst ivec4 v4 = ivec4(162,18,6,1);\nconst ivec4 v5 = ivec4(162,18,6,1);\nconst ivec4 v6 = ivec4(9,9,3,6);\nconst ivec4 v7 = ivec4(162,18,6,1);\nconst ivec2 v8 = ivec2(1,1458);\nconst ivec2 v9 = ivec2(1458,1);\nconst vec2 v10 = vec2(0.0006858710562414266,1.0);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_fast(((convert_position_fast(((convert_position_fast(gl_FragCoord.yx,v1, v2, v3, 0))),v4, v5, v6, 0))),v7, v8, v9, 0))) + 0.5) * v10)).r;\n}\n",
    "Im2Col_R_01c9a02f6b452ae5af6e94926ead0d25d54bd58c342ecdbceac0e3a7": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(162,1);\nconst ivec4 v1 = ivec4(13122,1458,162,1);\nconst ivec4 v2 = ivec4(1,9,9,162);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1458,162,18,1);\nconst ivec2 v5 = ivec2(1,1458);\nconst ivec2 v6 = ivec2(1458,1);\nconst vec2 v7 = vec2(0.0006858710562414266,1.0);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 18 / 3;\n    int kw = khkwc1 / 18 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 18;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 9 || w1 < 0 || w1 >= 9) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_R_018308b294b84bc2fc980c528ed0d43633383b515ead4a8b37ac5839": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(10368,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(81,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.006172839506172839,0.012345679012345678);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.006172839506172839,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 162; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(10368,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(81,128,1,1);\nconst ivec4 v3 = ivec4(1,128,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,128);\nconst ivec2 v7 = ivec2(128,1);\nconst vec2 v8 = vec2(0.0078125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(128,1,1,1);\nconst ivec2 v11 = ivec2(1,10368);\nconst ivec2 v12 = ivec2(10368,1);\nconst vec2 v13 = vec2(9.645061728395061e-05,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 / x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(10368,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(81,128,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(128,1,1,1);\nconst ivec2 v5 = ivec2(1,10368);\nconst ivec2 v6 = ivec2(10368,1);\nconst vec2 v7 = vec2(9.645061728395061e-05,1.0);\nconst ivec4 v8 = ivec4(1,128,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,128);\nconst ivec2 v12 = ivec2(128,1);\nconst vec2 v13 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(10368.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1152,4);\nconst ivec4 v1 = ivec4(93312,10368,1152,1);\nconst ivec4 v2 = ivec4(1,9,9,1152);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(10368,1152,128,1);\nconst ivec2 v5 = ivec2(1,10368);\nconst ivec2 v6 = ivec2(10368,1);\nconst vec2 v7 = vec2(9.645061728395061e-05,1.0);\nconst ivec4 v8 = ivec4(10368,1152,128,1);\nconst ivec2 v9 = ivec2(1,10368);\nconst ivec2 v10 = ivec2(10368,1);\nconst vec2 v11 = vec2(9.645061728395061e-05,1.0);\nconst ivec4 v12 = ivec4(10368,1152,128,1);\nconst ivec2 v13 = ivec2(1,10368);\nconst ivec2 v14 = ivec2(10368,1);\nconst vec2 v15 = vec2(9.645061728395061e-05,1.0);\nconst ivec4 v16 = ivec4(10368,1152,128,1);\nconst ivec2 v17 = ivec2(1,10368);\nconst ivec2 v18 = ivec2(10368,1);\nconst vec2 v19 = vec2(9.645061728395061e-05,1.0);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 128 / 3;\n    int kw = khkwc1 / 128 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 128;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 9 || w1 < 0 || w1 >= 9) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(10368,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(81,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.003472222222222222,0.012345679012345678);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.003472222222222222,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 288; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(10368.0,1.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(10368.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(10368,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(81,128,1,1);\nconst ivec4 v3 = ivec4(1,128,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,128);\nconst ivec2 v7 = ivec2(128,1);\nconst vec2 v8 = vec2(0.0078125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(128,1,1,1);\nconst ivec2 v11 = ivec2(1,10368);\nconst ivec2 v12 = ivec2(10368,1);\nconst vec2 v13 = vec2(9.645061728395061e-05,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_7241fb14976aaaa260eb21390c1e01875d79a302e3acf00b7d75f4dc": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(128,4,1);\nconst ivec3 v2 = ivec3(10368,1,1);\nconst ivec3 v3 = ivec3(1,10368,1);\nconst vec3 v4 = vec3(1.0,9.645061728395061e-05,1.0);\nconst ivec3 v5 = ivec3(128,4,1);\nconst ivec3 v6 = ivec3(10368,1,1);\nconst ivec3 v7 = ivec3(1,10368,1);\nconst vec3 v8 = vec3(1.0,9.645061728395061e-05,1.0);\nconst ivec3 v9 = ivec3(128,4,1);\nconst ivec3 v10 = ivec3(10368,1,1);\nconst ivec3 v11 = ivec3(1,10368,1);\nconst vec3 v12 = vec3(1.0,9.645061728395061e-05,1.0);\nconst ivec3 v13 = ivec3(128,4,1);\nconst ivec3 v14 = ivec3(10368,1,1);\nconst ivec3 v15 = ivec3(1,10368,1);\nconst vec3 v16 = vec3(1.0,9.645061728395061e-05,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_2a69e9ade11def312af9ff5a89931f6302b9d0a2d7cb1b693ebd940f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(81,1);\nconst ivec2 v1 = ivec2(1,1);\nconst ivec2 v2 = ivec2(81,1);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.012345679012345678);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,1.0);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseDiv_6b076b3de00d75756a1cd425e2a3c0b6ce033c29e4e06bd7e4775dcc": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(81,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(81,1,1,1);\nconst ivec4 v3 = ivec4(1,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1);\nconst ivec2 v7 = ivec2(1,1);\nconst vec2 v8 = vec2(1.0,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,81);\nconst ivec2 v12 = ivec2(81,1);\nconst vec2 v13 = vec2(0.012345679012345678,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 / x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_961b86f20b62026fcf073c08e4a3fe4f7adebaa63dfe798b9f915f4e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(81,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(81,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,81);\nconst ivec2 v6 = ivec2(81,1);\nconst vec2 v7 = vec2(0.012345679012345678,1.0);\nconst ivec4 v8 = ivec4(1,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1);\nconst ivec2 v12 = ivec2(1,1);\nconst vec2 v13 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_ac68d02a31edf4f86ceb8a320f31742b7566c59cbc9f41a951d41df0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(81.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Reshape_86df32a09c7490384afbc6a4b04c382030b594caa7559950d742b93d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(81,1);\nconst ivec4 v2 = ivec4(27,9,3,1);\nconst ivec4 v3 = ivec4(3,3,3,3);\nconst ivec4 v4 = ivec4(27,9,3,1);\nconst ivec4 v5 = ivec4(27,9,3,1);\nconst ivec4 v6 = ivec4(3,3,3,3);\nconst ivec4 v7 = ivec4(27,9,3,1);\nconst ivec2 v8 = ivec2(1,81);\nconst ivec2 v9 = ivec2(81,1);\nconst vec2 v10 = vec2(0.012345679012345678,1.0);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_fast(((convert_position_fast(((convert_position_fast(gl_FragCoord.yx,v1, v2, v3, 0))),v4, v5, v6, 0))),v7, v8, v9, 0))) + 0.5) * v10)).r;\n}\n",
    "Tensordot_R_9b3e7ef499f6ebd25a6ac82950ce99a07e32fbf40d8e7e212f7160af": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(64,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(1,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.012345679012345678,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.012345679012345678,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 81; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_eb72e22412c5946c29db54ab77c959e35f371fe9ee8819a0fa1cbe8b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(64,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(64,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,64);\nconst ivec2 v6 = ivec2(64,1);\nconst vec2 v7 = vec2(0.015625,1.0);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,64);\nconst ivec2 v11 = ivec2(64,1);\nconst vec2 v12 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_y,v9, v10, v11, 0))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_c5d6d39747e11c46935849b87f0e274027b666005bfea1d3f7831a2c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(64.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_85c6bcb22c001fcc0da0c8506824c8547471245083d0ce08664e77f0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(64,4,1);\nconst ivec3 v2 = ivec3(64,1,1);\nconst ivec3 v3 = ivec3(1,64,1);\nconst vec3 v4 = vec3(1.0,0.015625,1.0);\nconst ivec3 v5 = ivec3(64,4,1);\nconst ivec3 v6 = ivec3(64,1,1);\nconst ivec3 v7 = ivec3(1,64,1);\nconst vec3 v8 = vec3(1.0,0.015625,1.0);\nconst ivec3 v9 = ivec3(64,4,1);\nconst ivec3 v10 = ivec3(64,1,1);\nconst ivec3 v11 = ivec3(1,64,1);\nconst vec3 v12 = vec3(1.0,0.015625,1.0);\nconst ivec3 v13 = ivec3(64,4,1);\nconst ivec3 v14 = ivec3(64,1,1);\nconst ivec3 v15 = ivec3(1,64,1);\nconst vec3 v16 = vec3(1.0,0.015625,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_a15030236ed63d5fed06097846538ef020b77f816e76ff1423928cff": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1,1);\nconst ivec2 v1 = ivec2(1,1);\nconst ivec2 v2 = ivec2(1,1);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,1.0);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_ff0f0d6633892ac55bb4d0cc3ca2f4afe07b8cd8975446b87263343a": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(1.0,1.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Tanh_e1948de44680f6e01b3f0a4d50c30c3c7c6b6b40157a56be362d299d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\n\nfloat v = exp(-2.0*abs(x0));\ny = (1.0 - v) / (1.0 + v) * sign(x0);\n\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Tensordot_RGBA_affe507cadbe2f6b5de7e4ddb14a2c3fddff98814adfb4fba0cd7fd2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(162,1);\nconst ivec2 v1 = ivec2(2,1);\nconst ivec2 v2 = ivec2(81,2);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.012345679012345678);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,0.5);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseDiv_2bff397540c9eb452f9e32abd3f50bd3a05cde11e753a1e16a02a921": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(162,1);\nconst ivec4 v1 = ivec4(2,1,1,1);\nconst ivec4 v2 = ivec4(81,2,1,1);\nconst ivec4 v3 = ivec4(1,2,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,2);\nconst ivec2 v7 = ivec2(2,1);\nconst vec2 v8 = vec2(0.5,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(2,1,1,1);\nconst ivec2 v11 = ivec2(1,162);\nconst ivec2 v12 = ivec2(162,1);\nconst vec2 v13 = vec2(0.006172839506172839,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 / x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_e1d6325868eab2557f32ea3b0b4e0066b85855d2dd67e87f345d9b5f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(162,1);\nconst ivec4 v1 = ivec4(2,1,1,1);\nconst ivec4 v2 = ivec4(81,2,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(2,1,1,1);\nconst ivec2 v5 = ivec2(1,162);\nconst ivec2 v6 = ivec2(162,1);\nconst vec2 v7 = vec2(0.006172839506172839,1.0);\nconst ivec4 v8 = ivec4(1,2,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,2);\nconst ivec2 v12 = ivec2(2,1);\nconst vec2 v13 = vec2(0.5,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_638cc6dc8e2106cf935ab4586faf004be6a32ea80d32ca119fbcbcb3": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(162,1);\nconst ivec4 v1 = ivec4(81,1,1,1);\nconst ivec4 v2 = ivec4(2,81,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,2,1,1);\nconst ivec2 v5 = ivec2(1,162);\nconst ivec2 v6 = ivec2(162,1);\nconst vec2 v7 = vec2(0.006172839506172839,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Reshape_22044a043cc9975acaeeb72a96edf0e9d6d7fa94c3c1b32c4845acc8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(162,1);\nconst ivec4 v2 = ivec4(27,9,3,1);\nconst ivec4 v3 = ivec4(6,3,3,3);\nconst ivec4 v4 = ivec4(27,9,3,1);\nconst ivec4 v5 = ivec4(27,9,3,1);\nconst ivec4 v6 = ivec4(6,3,3,3);\nconst ivec4 v7 = ivec4(27,9,3,1);\nconst ivec2 v8 = ivec2(1,162);\nconst ivec2 v9 = ivec2(162,1);\nconst vec2 v10 = vec2(0.006172839506172839,1.0);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_fast(((convert_position_fast(((convert_position_fast(gl_FragCoord.yx,v1, v2, v3, 0))),v4, v5, v6, 0))),v7, v8, v9, 0))) + 0.5) * v10)).r;\n}\n",
    "Tensordot_R_cfda8efd54cdf9fde109730bae344dce8ad7dc38788e9f704f33a433": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(82,1);\nconst ivec2 v1 = ivec2(82,1);\nconst ivec2 v2 = ivec2(1,82);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.006172839506172839,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.006172839506172839,0.012195121951219513);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 162; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_8cd9257be4a3199d3a75233b13414d02975caa0760cc10aa2fad5246": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(82,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(82,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,82);\nconst ivec2 v6 = ivec2(82,1);\nconst vec2 v7 = vec2(0.012195121951219513,1.0);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,82);\nconst ivec2 v11 = ivec2(82,1);\nconst vec2 v12 = vec2(0.012195121951219513,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_y,v9, v10, v11, 0))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n"
  },
  "exec_infos": [
    {
      "shader_name": "Reshape_956f0dc23e9a76a3bb8618857ef3bf4953db9352d7e8d6d5aed273d9",
      "inputs": [
        {
          "variable_name": "Variable0",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1"
    },
    {
      "shader_name": "Im2Col_R_01c9a02f6b452ae5af6e94926ead0d25d54bd58c342ecdbceac0e3a7",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1514"
    },
    {
      "shader_name": "Tensordot_R_018308b294b84bc2fc980c528ed0d43633383b515ead4a8b37ac5839",
      "inputs": [
        {
          "variable_name": "Variable1514",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable919",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1515"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable17",
          "value": 0
        },
        {
          "variable_name": "Variable1515",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1023"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable1023",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable573",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1025"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable1025",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable10"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable10",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1518"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1518",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable918",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1519"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable30",
          "value": 0
        },
        {
          "variable_name": "Variable1519",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1020"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable1020",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable575",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1022"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable1022",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable19"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable19",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1522"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1522",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable917",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1523"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable33",
          "value": 0
        },
        {
          "variable_name": "Variable1523",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1017"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable10",
          "value": 0
        },
        {
          "variable_name": "Variable1017",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1026"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable577",
          "value": 0
        },
        {
          "variable_name": "Variable1026",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable28"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable28",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable29"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable29",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1526"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1526",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable920",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1527"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable46",
          "value": 0
        },
        {
          "variable_name": "Variable1527",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1014"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable1014",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable579",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1016"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable1016",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable38"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable38",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1530"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1530",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable921",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1531"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable49",
          "value": 0
        },
        {
          "variable_name": "Variable1531",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1011"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable29",
          "value": 0
        },
        {
          "variable_name": "Variable1011",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1027"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable581",
          "value": 0
        },
        {
          "variable_name": "Variable1027",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable47"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable47",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable48"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable48",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1534"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1534",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable922",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1535"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable62",
          "value": 0
        },
        {
          "variable_name": "Variable1535",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1008"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable1008",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable583",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1010"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable1010",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable57"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable57",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1538"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1538",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable923",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1539"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable65",
          "value": 0
        },
        {
          "variable_name": "Variable1539",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1005"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable48",
          "value": 0
        },
        {
          "variable_name": "Variable1005",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1028"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable585",
          "value": 0
        },
        {
          "variable_name": "Variable1028",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable66"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable66",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable67"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable67",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1542"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1542",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable916",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1543"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable78",
          "value": 0
        },
        {
          "variable_name": "Variable1543",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1002"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable1002",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable587",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1004"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable1004",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable76"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable76",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1546"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1546",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable915",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1547"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable81",
          "value": 0
        },
        {
          "variable_name": "Variable1547",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable999"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable67",
          "value": 0
        },
        {
          "variable_name": "Variable999",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1029"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable589",
          "value": 0
        },
        {
          "variable_name": "Variable1029",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable85"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable85",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable86"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable86",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1550"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1550",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable914",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1551"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable94",
          "value": 0
        },
        {
          "variable_name": "Variable1551",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable996"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable996",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable591",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable998"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable998",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable95"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable95",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1554"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1554",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable913",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1555"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable98",
          "value": 0
        },
        {
          "variable_name": "Variable1555",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable993"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable86",
          "value": 0
        },
        {
          "variable_name": "Variable993",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1030"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable593",
          "value": 0
        },
        {
          "variable_name": "Variable1030",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable104"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable104",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable105"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable105",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1558"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1558",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable912",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1559"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable110",
          "value": 0
        },
        {
          "variable_name": "Variable1559",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable990"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable990",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable595",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable992"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable992",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable114"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable114",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1562"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1562",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable911",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1563"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable113",
          "value": 0
        },
        {
          "variable_name": "Variable1563",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable987"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable105",
          "value": 0
        },
        {
          "variable_name": "Variable987",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1031"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable597",
          "value": 0
        },
        {
          "variable_name": "Variable1031",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable123"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable123",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable124"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable124",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1566"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1566",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable910",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1567"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable126",
          "value": 0
        },
        {
          "variable_name": "Variable1567",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable984"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable984",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable599",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable986"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable986",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable133"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable133",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1570"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1570",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable909",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1571"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable129",
          "value": 0
        },
        {
          "variable_name": "Variable1571",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable981"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable124",
          "value": 0
        },
        {
          "variable_name": "Variable981",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1032"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable601",
          "value": 0
        },
        {
          "variable_name": "Variable1032",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable142"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable142",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable143"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable143",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1574"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1574",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable908",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1575"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable142",
          "value": 0
        },
        {
          "variable_name": "Variable1575",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable978"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable978",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable603",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable980"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable980",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable152"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable152",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1578"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1578",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable907",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1579"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable145",
          "value": 0
        },
        {
          "variable_name": "Variable1579",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable975"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable143",
          "value": 0
        },
        {
          "variable_name": "Variable975",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1033"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable605",
          "value": 0
        },
        {
          "variable_name": "Variable1033",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable161"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable161",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable162"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable162",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1582"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1582",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable906",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1583"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable158",
          "value": 0
        },
        {
          "variable_name": "Variable1583",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable972"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable972",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable607",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable974"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable974",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable171"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable171",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1586"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1586",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable905",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1587"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable161",
          "value": 0
        },
        {
          "variable_name": "Variable1587",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable969"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable162",
          "value": 0
        },
        {
          "variable_name": "Variable969",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1034"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable609",
          "value": 0
        },
        {
          "variable_name": "Variable1034",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable180"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable180",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable181"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable181",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1590"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1590",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable904",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1591"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable174",
          "value": 0
        },
        {
          "variable_name": "Variable1591",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable966"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable966",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable611",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable968"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable968",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable190"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable190",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1594"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1594",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable903",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1595"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable177",
          "value": 0
        },
        {
          "variable_name": "Variable1595",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable963"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable181",
          "value": 0
        },
        {
          "variable_name": "Variable963",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1035"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable613",
          "value": 0
        },
        {
          "variable_name": "Variable1035",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable199"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable199",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable200"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable200",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1598"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1598",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable902",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1599"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable190",
          "value": 0
        },
        {
          "variable_name": "Variable1599",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable960"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable960",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable615",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable962"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable962",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable209"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable209",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1602"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1602",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable901",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1603"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable193",
          "value": 0
        },
        {
          "variable_name": "Variable1603",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable957"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable200",
          "value": 0
        },
        {
          "variable_name": "Variable957",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1036"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable617",
          "value": 0
        },
        {
          "variable_name": "Variable1036",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable218"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable218",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable219"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable219",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1606"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1606",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable900",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1607"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable206",
          "value": 0
        },
        {
          "variable_name": "Variable1607",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable954"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable954",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable619",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable956"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable956",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable228"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable228",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1610"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1610",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable899",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1611"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable209",
          "value": 0
        },
        {
          "variable_name": "Variable1611",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable951"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable219",
          "value": 0
        },
        {
          "variable_name": "Variable951",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1037"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable621",
          "value": 0
        },
        {
          "variable_name": "Variable1037",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable237"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable237",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable238"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable238",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1614"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1614",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable898",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1615"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable222",
          "value": 0
        },
        {
          "variable_name": "Variable1615",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable948"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable948",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable623",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable950"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable950",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable247"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable247",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1618"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1618",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable897",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1619"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable225",
          "value": 0
        },
        {
          "variable_name": "Variable1619",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable945"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable238",
          "value": 0
        },
        {
          "variable_name": "Variable945",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1038"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable625",
          "value": 0
        },
        {
          "variable_name": "Variable1038",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable256"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable256",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable257"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable257",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1622"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1622",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable896",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1623"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable238",
          "value": 0
        },
        {
          "variable_name": "Variable1623",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable942"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable942",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable627",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable944"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable944",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable266"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable266",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1626"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1626",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable895",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1627"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable241",
          "value": 0
        },
        {
          "variable_name": "Variable1627",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable939"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable257",
          "value": 0
        },
        {
          "variable_name": "Variable939",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1039"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable629",
          "value": 0
        },
        {
          "variable_name": "Variable1039",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable275"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable275",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable276"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable276",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1630"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1630",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable894",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1631"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable254",
          "value": 0
        },
        {
          "variable_name": "Variable1631",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable936"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable936",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable631",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable938"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable938",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable285"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable285",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1634"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1634",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable893",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1635"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable257",
          "value": 0
        },
        {
          "variable_name": "Variable1635",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable933"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable276",
          "value": 0
        },
        {
          "variable_name": "Variable933",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1040"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable633",
          "value": 0
        },
        {
          "variable_name": "Variable1040",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable294"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable294",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable295"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable295",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1638"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1638",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable892",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1639"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable270",
          "value": 0
        },
        {
          "variable_name": "Variable1639",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable930"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable930",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable635",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable932"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable932",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable304"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable304",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1642"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1642",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable891",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1643"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable273",
          "value": 0
        },
        {
          "variable_name": "Variable1643",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable927"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable295",
          "value": 0
        },
        {
          "variable_name": "Variable927",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1041"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable637",
          "value": 0
        },
        {
          "variable_name": "Variable1041",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable313"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable313",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable314"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable314",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1646"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1646",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable890",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1647"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable286",
          "value": 0
        },
        {
          "variable_name": "Variable1647",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable924"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable924",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable639",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable926"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable926",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable323"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable323",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1650"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1650",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable889",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1651"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable289",
          "value": 0
        },
        {
          "variable_name": "Variable1651",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable921"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable314",
          "value": 0
        },
        {
          "variable_name": "Variable921",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1042"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable641",
          "value": 0
        },
        {
          "variable_name": "Variable1042",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable332"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable332",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable333"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable333",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1654"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1654",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable888",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1655"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable302",
          "value": 0
        },
        {
          "variable_name": "Variable1655",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable918"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable918",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable643",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable920"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable920",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable342"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable342",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1658"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1658",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable887",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1659"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable305",
          "value": 0
        },
        {
          "variable_name": "Variable1659",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable915"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable333",
          "value": 0
        },
        {
          "variable_name": "Variable915",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1043"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable645",
          "value": 0
        },
        {
          "variable_name": "Variable1043",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable351"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable351",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable352"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable352",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1662"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1662",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable886",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1663"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable318",
          "value": 0
        },
        {
          "variable_name": "Variable1663",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable912"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable912",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable647",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable914"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable914",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable361"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable361",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1666"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1666",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable885",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1667"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable321",
          "value": 0
        },
        {
          "variable_name": "Variable1667",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable909"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable352",
          "value": 0
        },
        {
          "variable_name": "Variable909",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1044"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable649",
          "value": 0
        },
        {
          "variable_name": "Variable1044",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable370"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable370",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable371"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable371",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1670"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1670",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable884",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1671"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable334",
          "value": 0
        },
        {
          "variable_name": "Variable1671",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable906"
    },
    {
      "shader_name": "ElementwiseAdd_9661531ced0b43d0800ab2e153b969a09a9dd2853c08e9c661eb9358",
      "inputs": [
        {
          "variable_name": "Variable906",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable651",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable908"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable908",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable380"
    },
    {
      "shader_name": "Im2Col_RGBA_66b2eb9f5c092a60376c3e35057a9a69eaf7ef5616a8560ad803432c",
      "inputs": [
        {
          "variable_name": "Variable380",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1674"
    },
    {
      "shader_name": "Tensordot_RGBA_87fc2ec63af97b6b98123be4c162deb9ccbbf4e9a5b2022cae3b6d69",
      "inputs": [
        {
          "variable_name": "Variable1674",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable883",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1675"
    },
    {
      "shader_name": "ElementwiseDiv_201f1b6277541d08c035695f300be28b801086123b99b6bc2ca6e2d0",
      "inputs": [
        {
          "variable_name": "ConstantVariable337",
          "value": 0
        },
        {
          "variable_name": "Variable1675",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable903"
    },
    {
      "shader_name": "ElementwiseAdd_a918641865d8fa76ee39a3dc5cb17e276f2ad98e232644236b2b7f60",
      "inputs": [
        {
          "variable_name": "Variable371",
          "value": 0
        },
        {
          "variable_name": "Variable903",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1045"
    },
    {
      "shader_name": "ElementwiseAdd_161fa1f163ddce7f965c5c87c4028bef1d859d386a0549e268bb451e",
      "inputs": [
        {
          "variable_name": "ConstantVariable653",
          "value": 0
        },
        {
          "variable_name": "Variable1045",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable389"
    },
    {
      "shader_name": "Relu_d6bc23cc97c65309e2a087fec935e7de3cace62735c6064ef3be3957",
      "inputs": [
        {
          "variable_name": "Variable389",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1726"
    },
    {
      "shader_name": "ConvertRtoRGBA_7241fb14976aaaa260eb21390c1e01875d79a302e3acf00b7d75f4dc",
      "inputs": [
        {
          "variable_name": "Variable1726",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable390"
    },
    {
      "shader_name": "Tensordot_RGBA_2a69e9ade11def312af9ff5a89931f6302b9d0a2d7cb1b693ebd940f",
      "inputs": [
        {
          "variable_name": "Variable390",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable924",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1678"
    },
    {
      "shader_name": "ElementwiseDiv_6b076b3de00d75756a1cd425e2a3c0b6ce033c29e4e06bd7e4775dcc",
      "inputs": [
        {
          "variable_name": "ConstantVariable340",
          "value": 0
        },
        {
          "variable_name": "Variable1678",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable900"
    },
    {
      "shader_name": "ElementwiseAdd_961b86f20b62026fcf073c08e4a3fe4f7adebaa63dfe798b9f915f4e",
      "inputs": [
        {
          "variable_name": "Variable900",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable655",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable902"
    },
    {
      "shader_name": "Relu_ac68d02a31edf4f86ceb8a320f31742b7566c59cbc9f41a951d41df0",
      "inputs": [
        {
          "variable_name": "Variable902",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable399"
    },
    {
      "shader_name": "Reshape_86df32a09c7490384afbc6a4b04c382030b594caa7559950d742b93d",
      "inputs": [
        {
          "variable_name": "Variable399",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable400"
    },
    {
      "shader_name": "Tensordot_R_9b3e7ef499f6ebd25a6ac82950ce99a07e32fbf40d8e7e212f7160af",
      "inputs": [
        {
          "variable_name": "Variable400",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable879",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable401"
    },
    {
      "shader_name": "ElementwiseAdd_eb72e22412c5946c29db54ab77c959e35f371fe9ee8819a0fa1cbe8b",
      "inputs": [
        {
          "variable_name": "Variable401",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable2",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable402"
    },
    {
      "shader_name": "Relu_c5d6d39747e11c46935849b87f0e274027b666005bfea1d3f7831a2c",
      "inputs": [
        {
          "variable_name": "Variable402",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1728"
    },
    {
      "shader_name": "ConvertRtoRGBA_85c6bcb22c001fcc0da0c8506824c8547471245083d0ce08664e77f0",
      "inputs": [
        {
          "variable_name": "Variable1728",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable403"
    },
    {
      "shader_name": "Tensordot_RGBA_a15030236ed63d5fed06097846538ef020b77f816e76ff1423928cff",
      "inputs": [
        {
          "variable_name": "Variable403",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable880",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable404"
    },
    {
      "shader_name": "ElementwiseAdd_ff0f0d6633892ac55bb4d0cc3ca2f4afe07b8cd8975446b87263343a",
      "inputs": [
        {
          "variable_name": "Variable404",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable572",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable405"
    },
    {
      "shader_name": "Tanh_e1948de44680f6e01b3f0a4d50c30c3c7c6b6b40157a56be362d299d",
      "inputs": [
        {
          "variable_name": "Variable405",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable406"
    },
    {
      "shader_name": "Tensordot_RGBA_affe507cadbe2f6b5de7e4ddb14a2c3fddff98814adfb4fba0cd7fd2",
      "inputs": [
        {
          "variable_name": "Variable390",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable925",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1681"
    },
    {
      "shader_name": "ElementwiseDiv_2bff397540c9eb452f9e32abd3f50bd3a05cde11e753a1e16a02a921",
      "inputs": [
        {
          "variable_name": "ConstantVariable352",
          "value": 0
        },
        {
          "variable_name": "Variable1681",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable897"
    },
    {
      "shader_name": "ElementwiseAdd_e1d6325868eab2557f32ea3b0b4e0066b85855d2dd67e87f345d9b5f",
      "inputs": [
        {
          "variable_name": "Variable897",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable657",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable899"
    },
    {
      "shader_name": "Relu_638cc6dc8e2106cf935ab4586faf004be6a32ea80d32ca119fbcbcb3",
      "inputs": [
        {
          "variable_name": "Variable899",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable416"
    },
    {
      "shader_name": "Reshape_22044a043cc9975acaeeb72a96edf0e9d6d7fa94c3c1b32c4845acc8",
      "inputs": [
        {
          "variable_name": "Variable416",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable417"
    },
    {
      "shader_name": "Tensordot_R_cfda8efd54cdf9fde109730bae344dce8ad7dc38788e9f704f33a433",
      "inputs": [
        {
          "variable_name": "Variable417",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable882",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable418"
    },
    {
      "shader_name": "ElementwiseAdd_8cd9257be4a3199d3a75233b13414d02975caa0760cc10aa2fad5246",
      "inputs": [
        {
          "variable_name": "Variable418",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable342",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable419"
    }
  ],
  "constants_map": {
    "ConstantVariable919": {
      "byte_offset": 0,
      "size": 20736
    },
    "ConstantVariable17": {
      "byte_offset": 82944,
      "size": 128
    },
    "ConstantVariable573": {
      "byte_offset": 83456,
      "size": 128
    },
    "ConstantVariable918": {
      "byte_offset": 83968,
      "size": 147456
    },
    "ConstantVariable30": {
      "byte_offset": 673792,
      "size": 128
    },
    "ConstantVariable575": {
      "byte_offset": 674304,
      "size": 128
    },
    "ConstantVariable917": {
      "byte_offset": 674816,
      "size": 147456
    },
    "ConstantVariable33": {
      "byte_offset": 1264640,
      "size": 128
    },
    "ConstantVariable577": {
      "byte_offset": 1265152,
      "size": 128
    },
    "ConstantVariable920": {
      "byte_offset": 1265664,
      "size": 147456
    },
    "ConstantVariable46": {
      "byte_offset": 1855488,
      "size": 128
    },
    "ConstantVariable579": {
      "byte_offset": 1856000,
      "size": 128
    },
    "ConstantVariable921": {
      "byte_offset": 1856512,
      "size": 147456
    },
    "ConstantVariable49": {
      "byte_offset": 2446336,
      "size": 128
    },
    "ConstantVariable581": {
      "byte_offset": 2446848,
      "size": 128
    },
    "ConstantVariable922": {
      "byte_offset": 2447360,
      "size": 147456
    },
    "ConstantVariable62": {
      "byte_offset": 3037184,
      "size": 128
    },
    "ConstantVariable583": {
      "byte_offset": 3037696,
      "size": 128
    },
    "ConstantVariable923": {
      "byte_offset": 3038208,
      "size": 147456
    },
    "ConstantVariable65": {
      "byte_offset": 3628032,
      "size": 128
    },
    "ConstantVariable585": {
      "byte_offset": 3628544,
      "size": 128
    },
    "ConstantVariable916": {
      "byte_offset": 3629056,
      "size": 147456
    },
    "ConstantVariable78": {
      "byte_offset": 4218880,
      "size": 128
    },
    "ConstantVariable587": {
      "byte_offset": 4219392,
      "size": 128
    },
    "ConstantVariable915": {
      "byte_offset": 4219904,
      "size": 147456
    },
    "ConstantVariable81": {
      "byte_offset": 4809728,
      "size": 128
    },
    "ConstantVariable589": {
      "byte_offset": 4810240,
      "size": 128
    },
    "ConstantVariable914": {
      "byte_offset": 4810752,
      "size": 147456
    },
    "ConstantVariable94": {
      "byte_offset": 5400576,
      "size": 128
    },
    "ConstantVariable591": {
      "byte_offset": 5401088,
      "size": 128
    },
    "ConstantVariable913": {
      "byte_offset": 5401600,
      "size": 147456
    },
    "ConstantVariable98": {
      "byte_offset": 5991424,
      "size": 128
    },
    "ConstantVariable593": {
      "byte_offset": 5991936,
      "size": 128
    },
    "ConstantVariable912": {
      "byte_offset": 5992448,
      "size": 147456
    },
    "ConstantVariable110": {
      "byte_offset": 6582272,
      "size": 128
    },
    "ConstantVariable595": {
      "byte_offset": 6582784,
      "size": 128
    },
    "ConstantVariable911": {
      "byte_offset": 6583296,
      "size": 147456
    },
    "ConstantVariable113": {
      "byte_offset": 7173120,
      "size": 128
    },
    "ConstantVariable597": {
      "byte_offset": 7173632,
      "size": 128
    },
    "ConstantVariable910": {
      "byte_offset": 7174144,
      "size": 147456
    },
    "ConstantVariable126": {
      "byte_offset": 7763968,
      "size": 128
    },
    "ConstantVariable599": {
      "byte_offset": 7764480,
      "size": 128
    },
    "ConstantVariable909": {
      "byte_offset": 7764992,
      "size": 147456
    },
    "ConstantVariable129": {
      "byte_offset": 8354816,
      "size": 128
    },
    "ConstantVariable601": {
      "byte_offset": 8355328,
      "size": 128
    },
    "ConstantVariable908": {
      "byte_offset": 8355840,
      "size": 147456
    },
    "ConstantVariable142": {
      "byte_offset": 8945664,
      "size": 128
    },
    "ConstantVariable603": {
      "byte_offset": 8946176,
      "size": 128
    },
    "ConstantVariable907": {
      "byte_offset": 8946688,
      "size": 147456
    },
    "ConstantVariable145": {
      "byte_offset": 9536512,
      "size": 128
    },
    "ConstantVariable605": {
      "byte_offset": 9537024,
      "size": 128
    },
    "ConstantVariable906": {
      "byte_offset": 9537536,
      "size": 147456
    },
    "ConstantVariable158": {
      "byte_offset": 10127360,
      "size": 128
    },
    "ConstantVariable607": {
      "byte_offset": 10127872,
      "size": 128
    },
    "ConstantVariable905": {
      "byte_offset": 10128384,
      "size": 147456
    },
    "ConstantVariable161": {
      "byte_offset": 10718208,
      "size": 128
    },
    "ConstantVariable609": {
      "byte_offset": 10718720,
      "size": 128
    },
    "ConstantVariable904": {
      "byte_offset": 10719232,
      "size": 147456
    },
    "ConstantVariable174": {
      "byte_offset": 11309056,
      "size": 128
    },
    "ConstantVariable611": {
      "byte_offset": 11309568,
      "size": 128
    },
    "ConstantVariable903": {
      "byte_offset": 11310080,
      "size": 147456
    },
    "ConstantVariable177": {
      "byte_offset": 11899904,
      "size": 128
    },
    "ConstantVariable613": {
      "byte_offset": 11900416,
      "size": 128
    },
    "ConstantVariable902": {
      "byte_offset": 11900928,
      "size": 147456
    },
    "ConstantVariable190": {
      "byte_offset": 12490752,
      "size": 128
    },
    "ConstantVariable615": {
      "byte_offset": 12491264,
      "size": 128
    },
    "ConstantVariable901": {
      "byte_offset": 12491776,
      "size": 147456
    },
    "ConstantVariable193": {
      "byte_offset": 13081600,
      "size": 128
    },
    "ConstantVariable617": {
      "byte_offset": 13082112,
      "size": 128
    },
    "ConstantVariable900": {
      "byte_offset": 13082624,
      "size": 147456
    },
    "ConstantVariable206": {
      "byte_offset": 13672448,
      "size": 128
    },
    "ConstantVariable619": {
      "byte_offset": 13672960,
      "size": 128
    },
    "ConstantVariable899": {
      "byte_offset": 13673472,
      "size": 147456
    },
    "ConstantVariable209": {
      "byte_offset": 14263296,
      "size": 128
    },
    "ConstantVariable621": {
      "byte_offset": 14263808,
      "size": 128
    },
    "ConstantVariable898": {
      "byte_offset": 14264320,
      "size": 147456
    },
    "ConstantVariable222": {
      "byte_offset": 14854144,
      "size": 128
    },
    "ConstantVariable623": {
      "byte_offset": 14854656,
      "size": 128
    },
    "ConstantVariable897": {
      "byte_offset": 14855168,
      "size": 147456
    },
    "ConstantVariable225": {
      "byte_offset": 15444992,
      "size": 128
    },
    "ConstantVariable625": {
      "byte_offset": 15445504,
      "size": 128
    },
    "ConstantVariable896": {
      "byte_offset": 15446016,
      "size": 147456
    },
    "ConstantVariable238": {
      "byte_offset": 16035840,
      "size": 128
    },
    "ConstantVariable627": {
      "byte_offset": 16036352,
      "size": 128
    },
    "ConstantVariable895": {
      "byte_offset": 16036864,
      "size": 147456
    },
    "ConstantVariable241": {
      "byte_offset": 16626688,
      "size": 128
    },
    "ConstantVariable629": {
      "byte_offset": 16627200,
      "size": 128
    },
    "ConstantVariable894": {
      "byte_offset": 16627712,
      "size": 147456
    },
    "ConstantVariable254": {
      "byte_offset": 17217536,
      "size": 128
    },
    "ConstantVariable631": {
      "byte_offset": 17218048,
      "size": 128
    },
    "ConstantVariable893": {
      "byte_offset": 17218560,
      "size": 147456
    },
    "ConstantVariable257": {
      "byte_offset": 17808384,
      "size": 128
    },
    "ConstantVariable633": {
      "byte_offset": 17808896,
      "size": 128
    },
    "ConstantVariable892": {
      "byte_offset": 17809408,
      "size": 147456
    },
    "ConstantVariable270": {
      "byte_offset": 18399232,
      "size": 128
    },
    "ConstantVariable635": {
      "byte_offset": 18399744,
      "size": 128
    },
    "ConstantVariable891": {
      "byte_offset": 18400256,
      "size": 147456
    },
    "ConstantVariable273": {
      "byte_offset": 18990080,
      "size": 128
    },
    "ConstantVariable637": {
      "byte_offset": 18990592,
      "size": 128
    },
    "ConstantVariable890": {
      "byte_offset": 18991104,
      "size": 147456
    },
    "ConstantVariable286": {
      "byte_offset": 19580928,
      "size": 128
    },
    "ConstantVariable639": {
      "byte_offset": 19581440,
      "size": 128
    },
    "ConstantVariable889": {
      "byte_offset": 19581952,
      "size": 147456
    },
    "ConstantVariable289": {
      "byte_offset": 20171776,
      "size": 128
    },
    "ConstantVariable641": {
      "byte_offset": 20172288,
      "size": 128
    },
    "ConstantVariable888": {
      "byte_offset": 20172800,
      "size": 147456
    },
    "ConstantVariable302": {
      "byte_offset": 20762624,
      "size": 128
    },
    "ConstantVariable643": {
      "byte_offset": 20763136,
      "size": 128
    },
    "ConstantVariable887": {
      "byte_offset": 20763648,
      "size": 147456
    },
    "ConstantVariable305": {
      "byte_offset": 21353472,
      "size": 128
    },
    "ConstantVariable645": {
      "byte_offset": 21353984,
      "size": 128
    },
    "ConstantVariable886": {
      "byte_offset": 21354496,
      "size": 147456
    },
    "ConstantVariable318": {
      "byte_offset": 21944320,
      "size": 128
    },
    "ConstantVariable647": {
      "byte_offset": 21944832,
      "size": 128
    },
    "ConstantVariable885": {
      "byte_offset": 21945344,
      "size": 147456
    },
    "ConstantVariable321": {
      "byte_offset": 22535168,
      "size": 128
    },
    "ConstantVariable649": {
      "byte_offset": 22535680,
      "size": 128
    },
    "ConstantVariable884": {
      "byte_offset": 22536192,
      "size": 147456
    },
    "ConstantVariable334": {
      "byte_offset": 23126016,
      "size": 128
    },
    "ConstantVariable651": {
      "byte_offset": 23126528,
      "size": 128
    },
    "ConstantVariable883": {
      "byte_offset": 23127040,
      "size": 147456
    },
    "ConstantVariable337": {
      "byte_offset": 23716864,
      "size": 128
    },
    "ConstantVariable653": {
      "byte_offset": 23717376,
      "size": 128
    },
    "ConstantVariable924": {
      "byte_offset": 23717888,
      "size": 128
    },
    "ConstantVariable340": {
      "byte_offset": 23718400,
      "size": 1
    },
    "ConstantVariable655": {
      "byte_offset": 23718404,
      "size": 1
    },
    "ConstantVariable879": {
      "byte_offset": 23718408,
      "size": 5184
    },
    "ConstantVariable2": {
      "byte_offset": 23739144,
      "size": 64
    },
    "ConstantVariable880": {
      "byte_offset": 23739400,
      "size": 64
    },
    "ConstantVariable572": {
      "byte_offset": 23739656,
      "size": 1
    },
    "ConstantVariable925": {
      "byte_offset": 23739660,
      "size": 256
    },
    "ConstantVariable352": {
      "byte_offset": 23740684,
      "size": 2
    },
    "ConstantVariable657": {
      "byte_offset": 23740692,
      "size": 2
    },
    "ConstantVariable882": {
      "byte_offset": 23740700,
      "size": 13284
    },
    "ConstantVariable342": {
      "byte_offset": 23793836,
      "size": 82
    }
  },
  "licenses": {
    "webdnn": "(C) Machine Intelligence Laboratory (The University of Tokyo), MIT License"
  }
}